name: Run Discord Bot

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 * * * 1-5"  # تشغيل كل ساعة من الاثنين إلى الجمعة

jobs:
  run-bot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Determine latest matching version
        id: latest_version
        run: |
          import requests, re, sys
          def fetch_chrome_versions():
              url = "https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/"
              resp = requests.get(url, timeout=10)
              resp.raise_for_status()
              # نبحث عن أسماء ملفات مثل: google-chrome-stable_134.0.6998.88-1_amd64.deb
              pattern = re.compile(r'google-chrome-stable_(\d+\.\d+\.\d+\.\d+)-\d+_amd64\.deb')
              versions = set()
              for line in resp.text.splitlines():
                  match = pattern.search(line)
                  if match:
                      ver = match.group(1)
                      versions.add(ver)
              return versions

          def fetch_chromedriver_versions():
              url = "https://chromedriver.storage.googleapis.com/"
              resp = requests.get(url, timeout=10)
              resp.raise_for_status()
              # نبحث عن إصدارات مثل: <Key>134.0.6998.88/chromedriver_linux64.zip</Key>
              pattern = re.compile(r'<Key>([\d\.]+)/chromedriver_linux64\.zip</Key>')
              versions = set()
              for line in resp.text.splitlines():
                  match = pattern.search(line)
                  if match:
                      ver = match.group(1)
                      versions.add(ver)
              return versions

          def version_tuple(ver_str):
              return tuple(map(int, ver_str.split(".")))
          
          chrome_versions = fetch_chrome_versions()
          chromedriver_versions = fetch_chromedriver_versions()
          intersection = chrome_versions.intersection(chromedriver_versions)
          if not intersection:
              print("No matching version found", file=sys.stderr)
              sys.exit(1)
          latest = max(intersection, key=version_tuple)
          print(f"Latest matching version: {latest}")
          print(f"::set-output name=version::{latest}")
        shell: python

      - name: Install Google Chrome stable and ChromeDriver
        run: |
          VERSION=${{ steps.latest_version.outputs.version }}
          echo "Latest matching version is $VERSION"
          sudo apt-get update
          sudo apt-get install -y wget gnupg unzip
          # إضافة مفتاح ومستودع Google Chrome
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c "echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' >> /etc/apt/sources.list.d/google-chrome.list"
          sudo apt-get update
          # تثبيت Google Chrome stable بالإصدار المطلوب (قد يكون الإصدار في المستودع مطابقًا للرقم الأساسي مع -1)
          sudo apt-get install -y google-chrome-stable=${VERSION}-1
          google-chrome --version

          # تحميل وتثبيت ChromeDriver المطابق
          wget https://chromedriver.storage.googleapis.com/${VERSION}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          chromedriver --version

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install discord.py requests beautifulsoup4 selenium

      - name: Run Discord Bot with xvfb
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          DEBUG_MODE: "False"
        run: |
          xvfb-run --auto-servernum --server-args='-screen 0 1024x768x24' python bot.py
